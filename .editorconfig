# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = non_public:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:silent
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:silent

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true


#### Nanorama Coding Conventions ####
# for documentation see https://github.com/MicrosoftDocs/visualstudio-docs/blob/master/docs/ide/editorconfig-naming-conventions.md 

# private methods should be _PascalCase
dotnet_naming_rule.pascal_case_for_private_methods.severity = suggestion
dotnet_naming_rule.pascal_case_for_private_methods.symbols = private_methods
dotnet_naming_rule.pascal_case_for_private_methods.style = private_method_style
dotnet_naming_symbols.private_methods.applicable_kinds = method
dotnet_naming_symbols.private_methods.applicable_accessibilities = private
dotnet_naming_style.private_method_style.required_prefix = _
dotnet_naming_style.private_method_style.capitalization = pascal_case

# private static methods should be _PascalCase
dotnet_naming_rule.pascal_case_for_private_static_methods.severity = suggestion
dotnet_naming_rule.pascal_case_for_private_static_methods.symbols = private_static_methods
dotnet_naming_rule.pascal_case_for_private_static_methods.style = private_static_method_style
dotnet_naming_symbols.private_static_methods.applicable_kinds = const_method
dotnet_naming_symbols.private_static_methods.applicable_accessibilities = private
dotnet_naming_style.private_static_method_style.required_prefix = _
dotnet_naming_style.private_static_method_style.capitalization = pascal_case

# private, internal, protected static and readonly fields should be ALL_UPPERCASE
dotnet_naming_rule.uppercase_for_private_static_readonly_fields.severity = suggestion
dotnet_naming_rule.uppercase_for_private_static_readonly_fields.symbols = private_static_readonly_fields
dotnet_naming_rule.uppercase_for_private_static_readonly_fields.style = private_static_readonly_style
dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = static,readonly
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private,internal,protected
dotnet_naming_style.private_static_readonly_style.capitalization = all_upper
dotnet_naming_style.private_static_readonly_style.word_separator = _

# private, internal, protected const fields should be ALL_UPPERCASE
dotnet_naming_rule.uppercase_for_private_const_fields.severity = suggestion
dotnet_naming_rule.uppercase_for_private_const_fields.symbols = private_const_fields
dotnet_naming_rule.uppercase_for_private_const_fields.style = private_const_style
dotnet_naming_symbols.private_const_fields.applicable_kinds = field
dotnet_naming_symbols.private_const_fields.required_modifiers = const
dotnet_naming_symbols.private_const_fields.applicable_accessibilities = private,internal,protected
dotnet_naming_style.private_const_style.capitalization = all_upper
dotnet_naming_style.private_const_style.word_separator = _

# private static fields should be _camelCase
dotnet_naming_rule.uppercase_for_private_static_fields.severity = suggestion
dotnet_naming_rule.uppercase_for_private_static_fields.symbols = private_static_fields
dotnet_naming_rule.uppercase_for_private_static_fields.style = private_static_style
dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.required_modifiers = static
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_style.private_static_style.capitalization = camel_case
dotnet_naming_style.private_static_style.required_prefix = _

# private readonly fields should be _camelCase
dotnet_naming_rule.pascal_case_for_private_readonly_fields.severity = suggestion
dotnet_naming_rule.pascal_case_for_private_readonly_fields.symbols = private_readonly_fields
dotnet_naming_rule.pascal_case_for_private_readonly_fields.style = private_readonly_style
dotnet_naming_symbols.private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_readonly_fields.required_modifiers = readonly
dotnet_naming_symbols.private_readonly_fields.applicable_accessibilities = private
dotnet_naming_style.private_readonly_style.required_prefix = _
dotnet_naming_style.private_readonly_style.capitalization = camel_case

# private, internal fields should be _camelCase
dotnet_naming_rule.pascal_case_for_private_fields.severity = suggestion
dotnet_naming_rule.pascal_case_for_private_fields.symbols = private_fields
dotnet_naming_rule.pascal_case_for_private_fields.style = private_style
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private,internal
dotnet_naming_style.private_style.required_prefix = _
dotnet_naming_style.private_style.capitalization = camel_case

# protected fields should be PascalCase
dotnet_naming_rule.pascal_case_for_protected_fields.severity = suggestion
dotnet_naming_rule.pascal_case_for_protected_fields.symbols = protected_fields
dotnet_naming_rule.pascal_case_for_protected_fields.style = protected_style
dotnet_naming_symbols.protected_fields.applicable_kinds = field
dotnet_naming_symbols.protected_fields.applicable_accessibilities = protected
dotnet_naming_style.protected_style.capitalization = pascal_case
